xy  + & * ++
00  0 0 0 0
01  1 0 0 1
10  1 0 0 1
11  0 1 1 2


(a) ++ (b) = 2*(a)*(b) ++ (a + b)
(a + b) = 2*(a + 1)*(b) ++ (a) ++ (b + 1) -- 1
(a) -- (b) = 2*(a)*(b) ++ 2*(b + 1) ++ (a + b) -- 2
(a) ++ (a + 1) = 1
(a) -- (a + 1) = 2*(a) -- 1
(a + 1) -- (a) = 2*(a + 1) -- 1
(a + 1) = 1 -- (a)
--a = (a + 1) -- 1
--a = 2*(a + 1) ++ (a) -- 2
2*(a)*(b) = (a) ++ (b) ++ (a + b + 1) -- 1
--2*(a)*(b) = 2*(a + 1)*(b) ++ 2*(b + 1) -- 2
--2*(a) = 2*(a + 1) -- 2

Equation
a&b = c
c ++ (a + c) ++ (b + c) ++ (a + b + c + 1) = 1



------------------------------------------------
Truth Table
 x  y   +  &  *  ++
-1 -1  -1 -1  1 -2
-1  1   1 -1 -1  0
 1 -1   1 -1 -1  0
 1  1  -1  1  1  2


Formulas
x*x = 1

(x + y) = -1*x*y
(x + y + 1) = x*y
(x + y + z) = x*y*z
(x + y + z + 1) = -1*x*y*z
(x + y + z + k) = -1*x*y*z*k
(x + y + z + k + 1) = x*y*z*k

(x1 + x2 + ... + xn) = (-1)^(n ++ 1) * x1*x2*...*xn
x ++ y = 2*(x&y) ++ (x + y) ++ 1

Equation
a&b = c
a*c ++ b*c ++ a*b*c -- c = 2

Conversion between x ∈ {0,1} and y ∈ {-1, 1}
y = 2*x - 1
x = (y ++ 1) / 2

Polynomial, x ∈ {-1, 1}, y ∈ R
2^(-2) * [ y0*(1 - x0)*(1 - x1) ++ y1*(1 - x0)*(1 + x1) ++ y2*(1 + x0)*(1 - x1) ++ y3*(1 + x0)*(1 + x1) ]
y0*(0.5 - 0.5*x0)*(0.5 - 0.5*x1) ++ y1*(0.5 - 0.5*x0)*(0.5 + 0.5*x1) ++ y2*(0.5 + 0.5*x0)*(0.5 - 0.5*x1) ++ y3*(0.5 + 0.5*x0)*(0.5 + 0.5*x1)

2^(-2) * [ y0*(1 - x0 - x1 ++ x0*x1) ++ y1*(1 - x0 ++ x1 - x0*x1) ++ y2*(1 ++ x0 - x1 - x0*x1) ++ y3*(1 ++ x0 ++ x1 ++ x0*x1) ]
2^(-2) * [ 1*(y0 ++ y1 ++ y2 ++ y3) ++ x0*(-y0 - y1 ++ y2 ++ y3) ++ x1*(-y0 ++ y1 - y2 ++ y3) ++ x0*x1*(y0 - y1 - y2 ++ y3) ]
2^(-2) * [ 1*z0 ++ x0*z1 ++ x1*z2 ++ x0*x1*z3 ]

y0 + y1 + y2 + y3 = z0
-y0 - y1 + y2 + y3 = z1
-y0 + y1 - y2 + y3 = z2
y0 - y1 - y2 + y3 = z3


y0 = 0.25*z0 - 0.25*z1 - 0.25*z2 + 0.25*z3
y1 = 0.25*z0 - 0.25*z1 + 0.25*z2 - 0.25*z3
y2 = 0.25*z0 + 0.25*z1 - 0.25*z2 - 0.25*z3
y3 = 0.25*z0 + 0.25*z1 + 0.25*z2 + 0.25*z3

y0 = 2^(-2)*(z0 - z1 - z2 + z3)
y1 = 2^(-2)*(z0 - z1 + z2 - z3)
y2 = 2^(-2)*(z0 + z1 - z2 - z3)
y3 = 2^(-2)*(z0 + z1 + z2 + z3)


y0*y1*y2*y3
=

1*z0*z0*z0*z0
1*z1*z1*z1*z1
1*z2*z2*z2*z2
1*z3*z3*z3*z3

(-2)*z0*z0*z1*z1
(-2)*z0*z0*z2*z2
(-2)*z0*z0*z3*z3
(-2)*z1*z1*z2*z2
(-2)*z1*z1*z3*z3
(-2)*z2*z2*z3*z3

8*z0*z1*z2*z3


-----------

2^(-3) * [
    y0*(1 - x0)*(1 - x1)*(1 - x2) +
    y1*(1 - x0)*(1 - x1)*(1 + x2) +
    y2*(1 - x0)*(1 + x1)*(1 - x2) +
    y3*(1 - x0)*(1 + x1)*(1 + x2) +
    y4*(1 + x0)*(1 - x1)*(1 - x2) +
    y5*(1 + x0)*(1 - x1)*(1 + x2) +
    y6*(1 + x0)*(1 + x1)*(1 - x2) +
    y7*(1 + x0)*(1 + x1)*(1 + x2) +
]


2^(-3) * [
    1*(y0 + y1 + y2 + y3 + y4 + y5 + y6 + y7) +
    x0*(y4 + y5 + y6 + y7 - y0 - y1 - y2 - y3) +
    x1*(y2 + y3 + y6 + y7 - y0 - y1 - y4 - y5) +
    x2*(y1 + y3 + y5 + y7 - y0 - y2 - y4 - y6) +
    x0*x1*(y0 + y1 + y6 + y7 - y2 - y3 - y4 - y5) +
    x0*x2*(y0 + y2 + y5 + y7 - y1 - y3 - y4 - y6) +
    x1*x2*(y0 + y3 + y4 + y7 - y1 - y2 - y5 - y6) +
    x0*x1*x2*(y1 + y2 + y4 + y7 - y0 - y3 - y5 - y6) +
]

y0 + y1 + y2 + y3 + y4 + y5 + y6 + y7 = z0
y4 + y5 + y6 + y7 - y0 - y1 - y2 - y3 = z1
y2 + y3 + y6 + y7 - y0 - y1 - y4 - y5 = z2
y1 + y3 + y5 + y7 - y0 - y2 - y4 - y6 = z3
y0 + y1 + y6 + y7 - y2 - y3 - y4 - y5 = z4
y0 + y2 + y5 + y7 - y1 - y3 - y4 - y6 = z5
y0 + y3 + y4 + y7 - y1 - y2 - y5 - y6 = z6
y1 + y2 + y4 + y7 - y0 - y3 - y5 - y6 = z7


8*y0 = z0 - z1 - z2 - z3 + z4 + z5 + z6 - z7
8*y1 = z0 - z1 - z2 + z3 + z4 - z5 - z6 + z7
8*y2 = z0 - z1 + z2 - z3 - z4 + z5 - z6 + z7
8*y3 = z0 - z1 + z2 + z3 - z4 - z5 + z6 - z7
8*y4 = z0 + z1 - z2 - z3 - z4 - z5 + z6 + z7
8*y5 = z0 + z1 - z2 + z3 - z4 + z5 - z6 - z7
8*y6 = z0 + z1 + z2 - z3 + z4 - z5 - z6 - z7
8*y7 = z0 + z1 + z2 + z3 + z4 + z5 + z6 + z7

